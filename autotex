#!/usr/bin/env bash
# By: Lilian BESSON
# Email: Lilian.BESSON[AT]ens-cachan[DOT]fr
# Date: 23-03-2014
#
# autotex, a small wrapper around the input of pdflatex.
# (http://besson.qc.to/bin/autotex)
#
# autotex is designed to allow you to have excellent looking PDF
# even for minimal LaTeX file (1 line or more, but no painful \begin{document} or package imports)
#
# Simply edit ~/template.tex, and put ONE '\input{NAME}' on it,
# between \begin{document} and \end{document}.
#
# New: now autotex supports auto changing the title of the produced PDF file
# Simply add ONE line in you .tex file :
# '%autotex% Titre: My awesome title'
#
# New: now autotex supports auto changing the scale parameters for geometry package
# Simply add ONE line in you .tex file :
# '%autotex% Scale: 0.82' to import geometry with \usepackage[scale=0.82]{geometry}
#
# New: One can use two templates : ~/template.fr.tex to be used with French TeX files (*.fr.tex)
# and ~/template.en.tex to be used with English TeX files (*.en.tex), which is the default.
#
# Example of a LaTeX2e template to use with autotex :
# (http://besson.qc.to/publis/latex/template.tex) (and .fr.tex and .en.tex)
#
version='2.1'
NOANSI='false'
# pwd

icon="-i $(ls -H /usr/share/icons/*/*/*/*x-tex*svg | uniq | shuf | head -n1) "
NOTIFY="notify-send -t 10000 $icon autoTeX_v$version"

pdflatex="pdflatex"
# Add here options to use with PDFLaTeX
case "$1" in
    batchmode|nonstopmode|scrollmode|errorstopmode )
        echo -e "${magenta}Using \$1 as an option to pass to pdflatex : -interaction=${1}." | tee -a /tmp/autotex.log
        # Automatically, my color wrapper [pdflatex](http://besson.qc.to/bin/pdflatex) uses "-synctex=1 -file-line-error"
        pdflatex="${pdflatex} -interaction=${1}"
		shift
		;;
    -noansi )
        NOANSI='true'
        pdflatex="/usr/bin/pdflatex -synctex=1 -file-line-error -interaction=errorstopmode"
        shift
        ;;
esac

autotexf() {
    f="`basename $1`"
    f="${f%.tex}.tex"
    p="`pwd`"

    if [ ! -f "$p"/"$f" ]; then
        echo -e "${red}The file ${cyan}${u}'$p/$f'${U}${red} is NOT HERE : I skip it...${white}"
        return 1
    fi

    echo -e "Working with $u'$f'$U on $blue'$p'$white." | tee -a /tmp/autotex.log

    title="$(grep '%autotex% Titre: ' "${f}")"
    title="${title#%autotex% Titre: }"
    echo -e "Titre: $green${title}$white" | tee -a /tmp/autotex.log

    scale="$(grep '%autotex% Scale: ' "${f}")"
    scale="${scale#%autotex% Scale: }"
    scale="${scale:-0.75}"
    echo -e "Scale: $green${scale}$white" | tee -a /tmp/autotex.log
    # read

    # Try to change the template regarding the language
    echo -e "Try to change the template regarding the language..." | tee -a /tmp/autotex.log
    echo -e "We have f='${f}', and {f%.fr.tex}.fr.tex='${f%.fr.tex}.fr.tex', and {f%.en.tex}.en.tex='${f%.en.tex}.fr'..." | tee -a /tmp/autotex.log
    langf="en"
    template="template.en.tex"
    if [ "${f%.fr.tex}.fr.tex" = "$f" ]; then
        langf="fr"
        template="template.fr.tex"
        echo -e "Switching language from default (en) to ${green}fr (French)${white}..." | tee -a /tmp/autotex.log
    elif [ "${f%.en.tex}.en.tex" = "$f" ]; then
        langf="en"
        template="template.en.tex"
        echo -e "Switching language from default (en) to ${green}en (English)${white}..." | tee -a /tmp/autotex.log
    fi

    # There you can perform any automatic transfrom to ~/$template !
    cat $HOME/$template \
    	| sed s/"scale=[0-9\.]*"/"scale=${scale}"/ \
    	| sed s#MonTitreAChangerViaAutoTeX#"${title}"# \
    	| sed s/MyFileNameToChangeWithAutoTex/"${f%.tex}"/ \
    	> /tmp/$template

    ln -s -f -v $HOME/naereen.sty /tmp/naereen.sty
    ln -s -f -v "$p"/"$f" /tmp/"$f"

    # If this is too slow, remove it.
    # Try to create symlinks to every included TeX files ?
    includedfiles=$(cat "$p"/"$f" | grep -o "input{[^}]*" | sed s/"input{"//)
    nbifi=$(for i in ${includedfiles}; do ls $i $i.tex 2>/dev/null; done | wc -l)
    if [ "X${includedfiles}" = "X" ]; then
        nbifi=0
    fi
    echo -e "${magenta}I found ${nbifi} file(s) being included in $f (with the \\\\input{...} command).${white}"
    if (( nbifi < 400 )); then
        for ifi in $includedfiles; do
            [ -f "$p"/"$ifi" ] && ln -s -f -v "$p"/"$ifi" /tmp/"$ifi"
            [ -f "$p"/"$ifi".tex ] && ln -s -f -v "$p"/"$ifi".tex /tmp/"$ifi".tex
        done
    fi
    # read

    #  Try to do the same for pictures ?
    includedfiles=$(cat "$p"/"$f" | grep -o "includegraphics\[.*\]*{[^}]*" | sed s/"includegraphics\[.*\]*{"//)
    nbifi=$(for i in ${includedfiles}; do ls $i.pdf $i.png $i.jpg $i.svg 2>/dev/null; done | wc -l)
    if [ "X${includedfiles}" = "X" ]; then
        nbifi=0
    fi
    echo -e "${magenta}I found ${nbifi} file(s) being included in $f (with the \\\\includegraphics{...} command).${white}"
    if (( nbifi < 10 )); then
        for ifi in $includedfiles; do
            [ -f "$p"/"$ifi".pdf ] && ln -s -f -v "$p"/"$ifi".pdf /tmp/"$ifi".pdf
            [ -f "$p"/"$ifi".png ] && ln -s -f -v "$p"/"$ifi".png /tmp/"$ifi".png
            [ -f "$p"/"$ifi".jpg ] && ln -s -f -v "$p"/"$ifi".jpg /tmp/"$ifi".jpg
            [ -f "$p"/"$ifi".svg ] && ln -s -f -v "$p"/"$ifi".svg /tmp/"$ifi".svg
        done
    fi
    # read

    cd /tmp/
    rm -v -f /tmp/${template%.tex}.pdf

    echo -e "${cyan}Using $pdflatex as the pdflatex command.${white}" | tee -a /tmp/autotex.log

    echo -e "${cyan}Using ~/$template as the template file.${white}" | tee -a /tmp/autotex.log
    # read

    echo -e "\n\n\n===============================================================================\n\n\n"
    # This part is tricky, maybe keep the && or maybe not. Still not sure.
    $pdflatex $template && $pdflatex $template && \
        mv -f -v ${template%.tex}.pdf "$p"/${f%.tex}.pdf

    if [ -f "$p"/${f%.tex}.pdf ]; then
        $NOTIFY "<b>Success :)</b>\n autoTeX have been able to compile the file ${f%.tex}.pdf from ${f%.tex}.pdf\n (In the directory <i>$p</i>.)"
        evince "$p"/${f%.tex}.pdf &>/dev/null&
    else
        $NOTIFY "<b>Failure :(</b>\n autoTeX have NOT been able to compile the file ${f%.tex}.pdf from ${f%.tex}.pdf\n (In the directory <i>$p</i>.)"
    fi

    # We have to go back !
    cd "${p}"
}

# Start
echo -e "$0 have been called with the arguments (after processing the options) : ${blue}$@${white}." | tee -a /tmp/autotex.log

for i in "$@"; do
    echo -e "Calling the function ${magenta}'autotexf'${white} for the argument ${u}'${i}'${U} (on pwd = $(pwd))..." | tee -a /tmp/autotex.log
    autotexf "$i"
    echo -e "Done for ${magenta}'autotexf'${white} on ${u}'${i}'${U}..." | tee -a /tmp/autotex.log
done