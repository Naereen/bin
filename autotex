#!/usr/bin/env bash
# By: Lilian BESSON
# Email: Lilian.BESSON[AT]ens-cachan[DOT]fr
# Date: 23-03-2014
#
# autotex, a small wrapper around the input of pdflatex.
# (http://besson.qc.to/bin/autotex)
#
# autotex is designed to allow you to have excellent looking PDF
# even for minimal LaTeX file (1 line or more, but no painful \begin{document} or package imports)
#
# Simply edit ~/template.tex, and put ONE '\input{NAME}' on it,
# between \begin{document} and \end{document}.
#
# New: now autotex supports auto changing the title of the produced PDF file
# Simply add ONE line in you .tex file :
# '%autotex% Titre: My awesome title'
#
# New: now autotex supports auto changing the scale parameters for geometry package
# Simply add ONE line in you .tex file :
# '%autotex% Scale: 0.82' to import geometry with \usepackage[scale=0.82]{geometry}
#
# An example of a LaTeX2e template to use with autotex :
# (http://besson.qc.to/publis/latex/template.tex)
#
version='2.0'
NOANSI='false'
pwd

# Add here options to use with PDFLaTeX
# Automatically, my color wrapper [pdflatex](http://besson.qc.to/bin/pdflatex) uses "-synctex=1 -file-line-error"
pdflatex="pdflatex"
case "$1" in
	batchmode|nonstopmode|scrollmode|errorstopmode )
		echo -e "${magenta}Using \$1 as an option to pass to pdflatex : -interaction=${1}." | tee -a /tmp/autotex.log
		pdflatex="${pdflatex} -interaction=${1}"
		shift
		;;
    -noansi )
        NOANSI='true'
        pdflatex="/usr/bin/pdflatex -synctex=1 -file-line-error -interaction=errorstopmode"
        shift
        ;;
esac

f="`basename $1`"
p="`pwd`"
echo -e "Working with $u$f$U on $blue$p$white." | tee -a /tmp/autotex.log

title="$(grep '%autotex% Titre: ' "${f}")"
title="${title#%autotex% Titre: }"
echo -e "Titre: $green${title}$white" | tee -a /tmp/autotex.log

scale="$(grep '%autotex% Scale: ' "${f}")"
scale="${scale#%autotex% Scale: }"
scale="${scale:-0.75}"
echo -e "Scale: $green${scale}$white" | tee -a /tmp/autotex.log
# read

# There you can perform any automatic transfrom to ~/template.tex !
cat $HOME/template.tex \
	| sed s/"scale=[0-9\.]*"/"scale=${scale}"/ \
	| sed s#MonTitreAChangerViaAutoTeX#"${title}"# \
	| sed s/MyFileNameToChangeWithAutoTex/"${f%.tex}"/ \
	> /tmp/template.tex

ln -s -f -v $HOME/naereen.sty /tmp/naereen.sty
ln -s -f -v "$p"/"$f" /tmp/"$f"

# If this is too slow, remove it. Try to do the same for pictures ?
# Try to create symlinks to every included TeX files ?
includedfiles=$(cat "$p"/"$f" | grep -o "input{[^}]*" | sed s/"input{"//)
nbifi=$(ls -larth $includedfiles | wc -l)
echo -e "${magenta}I found $nbifi files being included in $f (with the \\\\input{...} command).${white}"
if (( nbifi < 400 )); then
    for ifi in $includedfiles; do
        ln -s -f -v "$p"/"$ifi" /tmp/"$ifi"
    done
fi
# read

cd /tmp/
rm -v -f /tmp/template.pdf

echo -e "${cyan}Using $pdflatex as the pdflatex command.${white}" | tee -a /tmp/autotex.log
# read

# This part is tricky, maybe keep the && or maybe not. Still not sure.
$pdflatex template.tex && $pdflatex template.tex && \
    mv -f -v template.pdf "$p"/${f%.tex}.pdf

[ -f "$p"/${f%.tex}.pdf ] && ( notify-send "autoTeX" "<b>Success :)</b>\n autoTeX have been able to compile the file ${f%.tex}.pdf from ${f%.tex}.pdf\n(In the directory <i>$p</i>.)" ; evince "$p"/${f%.tex}.pdf &>/dev/null& )