#!/usr/bin/env /bin/bash
################################## INFO #####################################
# A bash completion file (http://perso.crans.org/besson/bin/PDFCompress.bash_completion)
# for PDFCompress (http://perso.crans.org/besson/bin/PDFCompress)
#
# Copyright (C) 2013 Lilian BESSON (lbesson at ens-cachan dot fr)
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program. If not, see <http://www.gnu.org/licenses/>,
#     or <http://perso.crans.org/besson/LICENSE>.
##############################################################################

version="0.3"

# Merci à Valentin Samir (et son vrun_bash_completion) pour vrun.

contain(){
  local i
  for i in $2; do
      if [[ "$i" = "$1" ]]; then
        return 0
      fi
  done
  return 1
}

# Fonction de notre auto completion

_PDFCompress(){
  # declaration des variables locales
  local argc first cur opts quality

  # COMPREPLY désigne la réponse à renvoyer pour la complétion actuelle
  COMPREPLY=()

  # argc : vaut le nombre d'argument actuel sur la ligne de commande
  argc=${COMP_CWORD};

  # cur  : désigne la chaine de caractère actuelle pour le dernier mot de la ligne de commande
  first="${COMP_WORDS[1]}"
  cur="${COMP_WORDS[argc]}"
  opts="--help --version --no-keep --sign --no-compress --force --no-notify --no-zenity --verbose --quality $(ls *.pdf .*.pdf 2>>/tmp/PDFCompress.bash_completion.log)"
  quality="--quality"

  # les options possibles pour notre auto-complétion
    # on auto-complete la ligne de commande en recherchant cur dans la liste opts.
    # A noter que le -- est important ici pour éviter les "injections d'options" depuis $cur.
    COMPREPLY=( $(compgen -W "$opts" -- $cur ) )
  if [ $argc -eq 2 ]; then
    if contain $first "$quality"; then
      COMPREPLY=( $(compgen -W "screen ebook printer prepress" -- $cur) )
    fi
  fi

  # echo "$COMPREPLY" >> /tmp/PDFCompress.bash_completion.log # En mode debug
  return 0

}

# On active l'auto-completion de la commande PDFCompress en relation avec la fonction _PDFCompress
complete -F _PDFCompress PDFCompress
